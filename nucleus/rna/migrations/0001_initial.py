# Generated by Django 2.2.1 on 2019-06-03 15:25

import django.db.models.deletion
from django.db import migrations, models

import django_extensions.db.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Release",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(blank=True, db_index=True, editable=False)),
                (
                    "product",
                    models.CharField(
                        choices=[
                            ("Firefox", "Firefox"),
                            ("Firefox for Android", "Firefox for Android"),
                            ("Firefox Extended Support Release", "Firefox Extended Support Release"),
                            ("Firefox OS", "Firefox OS"),
                            ("Thunderbird", "Thunderbird"),
                            ("Firefox for iOS", "Firefox for iOS"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[("Nightly", "Nightly"), ("Aurora", "Aurora"), ("Beta", "Beta"), ("Release", "Release"), ("ESR", "ESR")],
                        max_length=255,
                    ),
                ),
                ("version", models.CharField(max_length=255)),
                ("release_date", models.DateTimeField()),
                ("text", models.TextField(blank=True)),
                ("is_public", models.BooleanField(default=False)),
                ("bug_list", models.TextField(blank=True)),
                ("bug_search_url", models.CharField(blank=True, max_length=2000)),
                ("system_requirements", models.TextField(blank=True)),
            ],
            options={
                "ordering": ("product", "-version", "channel"),
                "get_latest_by": "modified",
                "unique_together": {("product", "version")},
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(blank=True, db_index=True, editable=False)),
                ("bug", models.IntegerField(blank=True, null=True)),
                ("note", models.TextField(blank=True)),
                ("is_known_issue", models.BooleanField(default=False)),
                (
                    "tag",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("New", "New"),
                            ("Changed", "Changed"),
                            ("HTML5", "HTML5"),
                            ("Feature", "Feature"),
                            ("Language", "Language"),
                            ("Developer", "Developer"),
                            ("Enterprise", "Enterprise"),
                            ("Fixed", "Fixed"),
                        ],
                        max_length=255,
                    ),
                ),
                ("sort_num", models.IntegerField(default=0)),
                ("is_public", models.BooleanField(default=True)),
                (
                    "fixed_in_release",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="fixed_note_set", to="rna.Release"
                    ),
                ),
                ("releases", models.ManyToManyField(blank=True, to="rna.Release")),
            ],
            options={
                "get_latest_by": "modified",
            },
        ),
    ]
